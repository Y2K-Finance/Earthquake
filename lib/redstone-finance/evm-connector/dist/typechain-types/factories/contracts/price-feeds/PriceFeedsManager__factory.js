"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceFeedsManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedsIds_",
                type: "bytes32[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "DataFeedValueCannotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proposedTimestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "ProposedTimestampDoesNotMatchReceivedTimestamp",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "lastUpdateTimestampInMilliseconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "ProposedTimestampSmallerOrEqualToLastTimestamp",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampFromTooLongFuture",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampIsTooOld",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "newDataFeedId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "proposedTimestamp",
                type: "uint256",
            },
        ],
        name: "addDataFeedIdAndUpdateValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataFeedsIds",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLastRound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLastRoundParams",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getLastUpdateTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getValueForDataFeed",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getValueForDataFeedAndLastRoundParams",
        outputs: [
            {
                internalType: "uint256",
                name: "dataFeedValue",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "lastRoundNumber",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "lastUpdateTimestampInMilliseconds",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "requestedDataFeedsIds",
                type: "bytes32[]",
            },
        ],
        name: "getValuesForDataFeeds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastRound",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastUpdateTimestampMilliseconds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proposedRound",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "proposedTimestamp",
                type: "uint256",
            },
        ],
        name: "updateDataFeedValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052600060015560006002553480156200001b57600080fd5b5060405162001a4a38038062001a4a8339810160408190526200003e916200016d565b6200004933620000b4565b60005b8151811015620000ac576200009660038383815181106200007d57634e487b7160e01b600052603260045260246000fd5b60200260200101516200010460201b620007401760201c565b5080620000a38162000238565b9150506200004c565b505062000276565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200011283836200011b565b90505b92915050565b6000818152600183016020526040812054620001645750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000115565b50600062000115565b6000602080838503121562000180578182fd5b82516001600160401b038082111562000197578384fd5b818501915085601f830112620001ab578384fd5b815181811115620001c057620001c062000260565b8060051b604051601f19603f83011681018181108582111715620001e857620001e862000260565b604052828152858101935084860182860187018a101562000207578788fd5b8795505b838610156200022b5780518552600195909501949386019386016200020b565b5098975050505050505050565b60006000198214156200025957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6117c480620002866000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b2578063b24ebfcc11610081578063f2fde38b11610066578063f2fde38b14610280578063f50b2efe14610293578063f90c4924146102a657600080fd5b8063b24ebfcc14610265578063e1e468821461027857600080fd5b8063715018a61461021957806382bc07e6146102215780638da5cb5b1461022a578063971b9c031461025257600080fd5b80634231a2c3116101095780634a400896116100ee5780634a400896146101cd5780635e5516ad146101d65780637072777f1461020457600080fd5b80634231a2c3146101a857806344e02982146101ba57600080fd5b8063134962cd1461013b57806320f3ee2f146101505780633ce142f5146101705780633ecc7c7a14610195575b600080fd5b61014e610149366004611595565b6102ad565b005b600154600254604080519283526020830191909152015b60405180910390f35b61018361017e3660046114b1565b6102dd565b60405160ff9091168152602001610167565b61014e6101a33660046115b6565b610368565b6001545b604051908152602001610167565b6101ac6101c836600461157d565b610479565b6101ac60025481565b6101e96101e436600461157d565b6104c8565b60408051938452602084019290925290820152606001610167565b61020c6104e9565b60405161016791906115c8565b61014e610540565b6101ac60015481565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610167565b61020c6102603660046114e5565b610554565b6101ac6102733660046114e5565b61062c565b6002546101ac565b61014e61028e3660046114b1565b610637565b61014e6102a136600461157d565b6106ee565b6001610183565b6102b5610753565b6102c0600383610740565b506102d960015460016102d3919061167f565b82610368565b5050565b6000730c39486f770b26f5527bbbf942726537986cd7eb73ffffffffffffffffffffffffffffffffffffffff8316141561031957506000919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b610371826107d4565b610379575050565b6001829055610387816107ed565b60028190556003805460408051602080840282018101909252828152600093909290918301828280156103d957602002820191906000526020600020905b8154815260200190600101908083116103c5575b5050505050905060006103eb82610836565b905060005b82518110156104725781818151811061041957634e487b7160e01b600052603260045260246000fd5b60200260200101516005600085848151811061044557634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002081905550808061046a906116ff565b9150506103f0565b5050505050565b600081815260056020526040812054806104c2576040517f0565ce2a0000000000000000000000000000000000000000000000000000000081526004810184905260240161035f565b92915050565b60008060006104d684610479565b9250600154915060025490509193909250565b60038054604080516020808402820181019092528281526060939092909183018282801561053657602002820191906000526020600020905b815481526020019060010190808311610522575b5050505050905090565b610548610753565b6105526000610841565b565b60606000825167ffffffffffffffff81111561058057634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105a9578160200160208202803683370190505b50905060005b8351811015610625576105e88482815181106105db57634e487b7160e01b600052603260045260246000fd5b6020026020010151610479565b82828151811061060857634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061061d816116ff565b9150506105af565b5092915050565b60006104c2826108b6565b61063f610753565b73ffffffffffffffffffffffffffffffffffffffff81166106e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161035f565b6106eb81610841565b50565b6106f7816108c1565b60025481146106eb576002546040517f272e590700000000000000000000000000000000000000000000000000000000815260048101919091526024810182905260440161035f565b600061074c8383610973565b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035f565b600060015460016107e5919061167f565b909114919050565b60025481116106eb576002546040517fd458dd3b00000000000000000000000000000000000000000000000000000000815261035f918391600401918252602082015260400190565b60606104c2826109c2565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104c282610bbe565b60006108cf6103e883611697565b90508042101561092657603c6108e542836116e8565b11156102d9576040517fb6b0916d0000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161035f565b60b461093282426116e8565b11156102d9576040517f0321d0b50000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161035f565b60008181526001830160205260408120546109ba575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c2565b5060006104c2565b60606000825167ffffffffffffffff8111156109ee57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610a17578160200160208202803683370190505b5090506000835167ffffffffffffffff811115610a4457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610a6d578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610a9a57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610acd57816020015b6060815260200190600190039081610ab85790505b50905060005b8551811015610b3857604080516001808252818301909252906020808301908036833701905050828281518110610b1a57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080610b30906116ff565b915050610ad3565b506000610b43610cd2565b90506000610b5082610e00565b61ffff169050610b6160028361167f565b60405190925060005b82811015610ba7576000610b818a89898989610e53565b9050610b8d818661167f565b945082604052508080610b9f906116ff565b915050610b6a565b50610bb28487611182565b98975050505050505050565b6000815160001415610bfc576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c05826112fa565b600060028351610c159190611697565b905060028351610c259190611738565b610ca2576000610c8d84610c3a6001856116e8565b81518110610c5857634e487b7160e01b600052603260045260246000fd5b6020026020010151858481518110610c8057634e487b7160e01b600052603260045260246000fd5b6020026020010151611348565b9050610c9a600282611697565b949350505050565b828181518110610cc257634e487b7160e01b600052603260045260246000fd5b6020026020010151915050919050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610d3a576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610d77576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610db0600362ffffff851661167f565b610dba919061167f565b905036610dc860028361167f565b111561074c576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610e0e60208461167f565b905036811115610e4a576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b600080600080610e6285611354565b909250905060008080606081600d610e85610e7e60208961167f565b89906113a4565b610e8f919061167f565b90506000610ea8610ea160688d61167f565b36906113b0565b90506000610ec583610ebb60418f61167f565b610ea1919061167f565b9050610ed18382610ee4565b9350826020850120945081359650610f26565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b610f378765ffffffffffff166106ee565b610f4b85610f4660418f61167f565b6113bc565b9550610f56866102dd565b60ff1699505050505050505060008060005b8481101561114f57610f7b888583611452565b909350915060005b8c5181101561113c578c8181518110610fac57634e487b7160e01b600052603260045260246000fd5b602002602001015184141561112a5760008b8281518110610fdd57634e487b7160e01b600052603260045260246000fd5b60200260200101519050610ff681896001901b16151590565b15801561102d5750600160ff168d838151811061102357634e487b7160e01b600052603260045260246000fd5b6020026020010151105b15611124578c828151811061105257634e487b7160e01b600052603260045260246000fd5b602002602001018051809190611067906116ff565b81525050838b838151811061108c57634e487b7160e01b600052603260045260246000fd5b602002602001015160018f85815181106110b657634e487b7160e01b600052603260045260246000fd5b60200260200101516110c891906116e8565b815181106110e657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001881b81178c838151811061111757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b5061113c565b80611134816116ff565b915050610f83565b5080611147816116ff565b915050610f68565b50505081602082611160919061167f565b61116a91906116ab565b61117590604e61167f565b9998505050505050505050565b60606000835167ffffffffffffffff8111156111ae57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156111d7578160200160208202803683370190505b509050600160005b85518110156112f0578185828151811061120957634e487b7160e01b600052603260045260246000fd5b6020026020010151101561127d5784818151811061123757634e487b7160e01b600052603260045260246000fd5b6020026020010151826040517f2b13aef500000000000000000000000000000000000000000000000000000000815260040161035f929190918252602082015260400190565b60006112af8783815181106112a257634e487b7160e01b600052603260045260246000fd5b602002602001015161062c565b9050808483815181106112d257634e487b7160e01b600052603260045260246000fd5b602090810291909101015250806112e8816116ff565b9150506111df565b5090949350505050565b8051602082016020820281019150805b8281101561134257815b8181101561133957815181518082101561132f578084528183525b5050602001611314565b5060200161130a565b50505050565b600061074c828461167f565b60008080808061136560418761167f565b90506000611377610ea160208461167f565b8035945090506113888160036113b0565b62ffffff9490941697933563ffffffff16965092945050505050565b600061074c82846116ab565b600061074c82846116e8565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa15801561141f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151979650505050505050565b60008080611461604e8761167f565b9050600061148e61148761147660208961167f565b61148188600161167f565b906113a4565b8390611348565b9050600061149c36836113b0565b80359960209091013598509650505050505050565b6000602082840312156114c2578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461074c578182fd5b600060208083850312156114f7578182fd5b823567ffffffffffffffff81111561150d578283fd5b8301601f8101851361151d578283fd5b803561153061152b8261165b565b61160c565b80828252848201915084840188868560051b870101111561154f578687fd5b8694505b83851015611571578035835260019490940193918501918501611553565b50979650505050505050565b60006020828403121561158e578081fd5b5035919050565b600080604083850312156115a7578081fd5b50508035926020909101359150565b600080604083850312156115a7578182fd5b6020808252825182820181905260009190848201906040850190845b81811015611600578351835292840192918401916001016115e4565b50909695505050505050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561165357611653611778565b604052919050565b600067ffffffffffffffff82111561167557611675611778565b5060051b60200190565b600082198211156116925761169261174c565b500190565b6000826116a6576116a6611762565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116e3576116e361174c565b500290565b6000828210156116fa576116fa61174c565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117315761173161174c565b5060010190565b60008261174757611747611762565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203ab879bbcfa045314fbdeb8111c566a85061100e4a3122b68c4400c458ea6c4e64736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class PriceFeedsManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(dataFeedsIds_, overrides) {
        return super.deploy(dataFeedsIds_, overrides || {});
    }
    getDeployTransaction(dataFeedsIds_, overrides) {
        return super.getDeployTransaction(dataFeedsIds_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PriceFeedsManager__factory = PriceFeedsManager__factory;
PriceFeedsManager__factory.bytecode = _bytecode;
PriceFeedsManager__factory.abi = _abi;
//# sourceMappingURL=PriceFeedsManager__factory.js.map