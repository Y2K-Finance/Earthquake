"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceFeed__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "priceFeedsManagerAddress_",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "dataFeedId_",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "description_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "UseLatestRoundToGetDataFeedPrice",
        type: "error",
    },
    {
        inputs: [],
        name: "dataFeedId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "description",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "descriptionText",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataFeedId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        name: "getRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "",
                type: "uint80",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "latestRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80",
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256",
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161070838038061070883398101604081905261002f91610104565b600080546001600160a01b0319166001600160a01b0385161790556001829055805161006290600290602084019061006b565b50505050610249565b828054610077906101f8565b90600052602060002090601f01602090048101928261009957600085556100df565b82601f106100b257805160ff19168380011785556100df565b828001600101855582156100df579182015b828111156100df5782518255916020019190600101906100c4565b506100eb9291506100ef565b5090565b5b808211156100eb57600081556001016100f0565b600080600060608486031215610118578283fd5b83516001600160a01b038116811461012e578384fd5b60208581015160408701519295509350906001600160401b0380821115610153578384fd5b818701915087601f830112610166578384fd5b81518181111561017857610178610233565b604051601f8201601f19908116603f011681019083821181831017156101a0576101a0610233565b816040528281528a868487010111156101b7578687fd5b8693505b828410156101d857848401860151818501870152928501926101bb565b828411156101e857868684830101525b8096505050505050509250925092565b600181811c9082168061020c57607f821691505b6020821081141561022d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6104b0806102586000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806374cdbe5b1161005b57806374cdbe5b146100d45780639a6fc8f5146100dc578063c833776014610126578063feaf968c1461012e57600080fd5b8063313ce5671461008d578063370c826b146100a157806354fd4d50146100b85780637284e416146100bf575b600080fd5b604051600881526020015b60405180910390f35b6100aa60015481565b604051908152602001610098565b60016100aa565b6100c7610136565b60405161009891906103b5565b6100c76101c8565b6100ef6100ea366004610384565b610256565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610098565b6001546100aa565b6100ef610290565b60606002805461014590610426565b80601f016020809104026020016040519081016040528092919081815260200182805461017190610426565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b5050505050905090565b600280546101d590610426565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610426565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b60008060008060006040517f23ede60e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546001546040517f5e5516ad0000000000000000000000000000000000000000000000000000000081526004810191909152829182918291829182918291829173ffffffffffffffffffffffffffffffffffffffff1690635e5516ad9060240160606040518083038186803b15801561030b57600080fd5b505afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610357565b909a91995097504296508995509350505050565b60008060006060848603121561036b578283fd5b8351925060208401519150604084015190509250925092565b600060208284031215610395578081fd5b813569ffffffffffffffffffff811681146103ae578182fd5b9392505050565b6000602080835283518082850152825b818110156103e1578581018301518582016040015282016103c5565b818111156103f25783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061043a57607f821691505b60208210811415610474577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220700419a38d82e90bed2b61717ce2da967affa19380e6b22971ca75f117c854b264736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class PriceFeed__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(priceFeedsManagerAddress_, dataFeedId_, description_, overrides) {
        return super.deploy(priceFeedsManagerAddress_, dataFeedId_, description_, overrides || {});
    }
    getDeployTransaction(priceFeedsManagerAddress_, dataFeedId_, description_, overrides) {
        return super.getDeployTransaction(priceFeedsManagerAddress_, dataFeedId_, description_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PriceFeed__factory = PriceFeed__factory;
PriceFeed__factory.bytecode = _bytecode;
PriceFeed__factory.abi = _abi;
//# sourceMappingURL=PriceFeed__factory.js.map