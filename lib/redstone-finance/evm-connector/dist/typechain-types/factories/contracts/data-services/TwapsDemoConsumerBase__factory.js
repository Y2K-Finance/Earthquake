"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwapsDemoConsumerBase__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampFromTooLongFuture",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampIsTooOld",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610625806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633ce142f514610051578063b24ebfcc1461007b578063f50b2efe1461009c578063f90c4924146100b1575b600080fd5b61006461005f3660046103e1565b6100b8565b60405160ff90911681526020015b60405180910390f35b61008e610089366004610415565b610143565b604051908152602001610072565b6100af6100aa3660046104f3565b610154565b005b6001610064565b600073aab9568f7165e66acaff50b705c3f3e964cbd24f73ffffffffffffffffffffffffffffffffffffffff831614156100f457506000919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b600061014e82610160565b92915050565b61015d8161016b565b50565b600061014e82610221565b60006101796103e883610523565b9050804210156101d457603c61018f4283610537565b11156101d0576040517fb6b0916d0000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161013a565b5050565b60b46101e08242610537565b11156101d0576040517f0321d0b50000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161013a565b600081516000141561025f576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61026882610380565b6000600283516102789190610523565b905060028351610288919061054e565b6103375760006103228461029d600185610537565b815181106102d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151858481518110610315577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516103ce565b905061032f600282610523565b949350505050565b828181518110610370577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915050919050565b8051602082016020820281019150805b828110156103c857815b818110156103bf5781518151808210156103b5578084528183525b505060200161039a565b50602001610390565b50505050565b60006103da828461050b565b9392505050565b6000602082840312156103f2578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103da578182fd5b60006020808385031215610427578182fd5b823567ffffffffffffffff8082111561043e578384fd5b818501915085601f830112610451578384fd5b813581811115610463576104636105c0565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156104a6576104a66105c0565b604052828152858101935084860182860187018a10156104c4578788fd5b8795505b838610156104e65780358552600195909501949386019386016104c8565b5098975050505050505050565b600060208284031215610504578081fd5b5035919050565b6000821982111561051e5761051e610562565b500190565b60008261053257610532610591565b500490565b60008282101561054957610549610562565b500390565b60008261055d5761055d610591565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212206941b1c87a90c640cd0d9159d9090ea8c85ef09301c182203fbbed54310f79b264736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class TwapsDemoConsumerBase__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TwapsDemoConsumerBase__factory = TwapsDemoConsumerBase__factory;
TwapsDemoConsumerBase__factory.bytecode = _bytecode;
TwapsDemoConsumerBase__factory.abi = _abi;
//# sourceMappingURL=TwapsDemoConsumerBase__factory.js.map