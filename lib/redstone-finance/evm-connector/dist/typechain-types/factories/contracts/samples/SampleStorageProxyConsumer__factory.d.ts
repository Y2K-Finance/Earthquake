import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SampleStorageProxyConsumer, SampleStorageProxyConsumerInterface } from "../../../contracts/samples/SampleStorageProxyConsumer";
declare type SampleStorageProxyConsumerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SampleStorageProxyConsumer__factory extends ContractFactory {
    constructor(...args: SampleStorageProxyConsumerConstructorParams);
    deploy(_sampleStorageProxy: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SampleStorageProxyConsumer>;
    getDeployTransaction(_sampleStorageProxy: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SampleStorageProxyConsumer;
    connect(signer: Signer): SampleStorageProxyConsumer__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506040516109f93803806109f983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610968806100916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630fb1d7d4146100515780639b606ed914610066578063f5bcb8d61461008f578063f8382ebb146100b0575b600080fd5b61006461005f36600461064e565b6100c3565b005b610079610074366004610613565b61026b565b60405161008691906107ee565b60405180910390f35b6100a261009d36600461079d565b610418565b604051908152602001610086565b6100646100be3660046107b5565b6104c1565b600080546040517f9b606ed900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b606ed99061011a9086906004016107ee565b60006040518083038186803b15801561013257600080fd5b505afa158015610146573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261018c919081019061070a565b905060005b8351811015610265578281815181106101d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151828281518110610214577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015114610253576040517f4983170000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061025d816108a5565b915050610191565b50505050565b60606000825167ffffffffffffffff8111156102b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156102d9578160200160208202803683370190505b50905060005b835181101561041157600054845173ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d690869084908110610345577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b815260040161036b91815260200190565b60206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906107d6565b8282815181106103f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090810291909101015280610409816108a5565b9150506102df565b5092915050565b600080546040517ff5bcb8d60000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d69060240160206040518083038186803b15801561048357600080fd5b505afa158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb91906107d6565b92915050565b600080546040517ff5bcb8d60000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d69060240160206040518083038186803b15801561052c57600080fd5b505afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056491906107d6565b905081811461059f576040517f4983170000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600082601f8301126105b4578081fd5b813560206105c96105c483610881565b610832565b80838252828201915082860187848660051b89010111156105e8578586fd5b855b85811015610606578135845292840192908401906001016105ea565b5090979650505050505050565b600060208284031215610624578081fd5b813567ffffffffffffffff81111561063a578182fd5b610646848285016105a4565b949350505050565b60008060408385031215610660578081fd5b823567ffffffffffffffff80821115610677578283fd5b610683868387016105a4565b9350602091508185013581811115610699578384fd5b85019050601f810186136106ab578283fd5b80356106b96105c482610881565b80828252848201915084840189868560051b87010111156106d8578687fd5b8694505b838510156106fa5780358352600194909401939185019185016106dc565b5080955050505050509250929050565b6000602080838503121561071c578182fd5b825167ffffffffffffffff811115610732578283fd5b8301601f81018513610742578283fd5b80516107506105c482610881565b80828252848201915084840188868560051b870101111561076f578687fd5b8694505b83851015610791578051835260019490940193918501918501610773565b50979650505050505050565b6000602082840312156107ae578081fd5b5035919050565b600080604083850312156107c7578182fd5b50508035926020909101359150565b6000602082840312156107e7578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b818110156108265783518352928401929184019160010161080a565b50909695505050505050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561087957610879610903565b604052919050565b600067ffffffffffffffff82111561089b5761089b610903565b5060051b60200190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108fc577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122013f77be6f49dad010e411d626c2f514b115251d8183c364c2133e2d1b3cd704064736f6c63430008040033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): SampleStorageProxyConsumerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SampleStorageProxyConsumer;
}
export {};
//# sourceMappingURL=SampleStorageProxyConsumer__factory.d.ts.map