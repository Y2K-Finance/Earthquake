"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleStorageProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampIsNotValid",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "fetchArrayOfStructsUsingProxyDryRun",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "dataValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct SampleStorageProxy.SamplePoint[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "fetchStructOfArraysUsingProxyDryRun",
        outputs: [
            {
                components: [
                    {
                        internalType: "string[]",
                        name: "names",
                        type: "string[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "dataValues",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct SampleStorageProxy.SamplePoints",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "fetchStructUsingProxyDryRun",
        outputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "uint256",
                        name: "dataValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct SampleStorageProxy.SamplePoint",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "fetchValueUsingProxyDryRun",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "fetchValuesUsingProxyDryRun",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockExceptLastOneAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedMockSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getOracleValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "getOracleValues",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "oracleValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sampleContract",
                type: "address",
            },
        ],
        name: "register",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "saveOracleValueInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "saveOracleValuesInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506123a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806395262d9f116100b2578063df2c65b311610081578063f50b2efe11610066578063f50b2efe14610306578063f5bcb8d614610319578063f90c49241461033957600080fd5b8063df2c65b3146102d3578063ec5986c8146102e657600080fd5b806395262d9f146102875780639b606ed91461029a578063b24ebfcc146102ad578063d22158fa146102c057600080fd5b80633d60fee3116101095780634420e486116100ee5780634420e486146101ff5780636d90217f1461025457806381fc68841461026757600080fd5b80633d60fee3146101d7578063429989f0146101ec57600080fd5b80630a709a051461013b5780632a5284a9146101645780632fb8176b146101925780633ce142f5146101b2575b600080fd5b61014e610149366004611e82565b610340565b60405161015b9190612168565b60405180910390f35b610184610172366004611fa1565b60016020526000908152604090205481565b60405190815260200161015b565b6101a56101a0366004611e82565b610637565b60405161015b9190612142565b6101c56101c0366004611e4e565b61077d565b60405160ff909116815260200161015b565b6101ea6101e5366004611fa1565b61078e565b005b6101c56101fa366004611e4e565b6107a9565b6101ea61020d366004611e4e565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610184610262366004611fa1565b610c82565b61027a610275366004611fa1565b610d3f565b60405161015b9190612155565b6101c5610295366004611e4e565b610e5a565b6101a56102a8366004611e82565b610e65565b6101846102bb366004611e82565b610f48565b6101c56102ce366004611e4e565b610f53565b6101ea6102e1366004611e82565b610fda565b6102f96102f4366004611e82565b611071565b60405161015b91906120c3565b6101ea610314366004611fa1565b6112e1565b610184610327366004611fa1565b60009081526001602052604090205490565b600a6101c5565b6040805180820190915260608082526020820152600061035f83611324565b905060005b83518110156103e65781818151811061038d57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008684815181106103b957634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000208190555080806103de906122e2565b915050610364565b50600080546040517f9b606ed900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b606ed99061043e90879060040161207f565b60006040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104929190810190611f1a565b905060006040518060400160405280865167ffffffffffffffff8111156104c957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104fc57816020015b60608152602001906001900390816104e75790505b508152602001865167ffffffffffffffff81111561052a57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610553578160200160208202803683370190505b509052905060005b855181101561062e5760408051808201909152600681527f73616d706c650000000000000000000000000000000000000000000000000000602082015282518051839081106105ba57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508281815181106105e557634e487b7160e01b600052603260045260246000fd5b60200260200101518260200151828151811061061157634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610626816122e2565b91505061055b565b50949350505050565b6060600061064483611324565b905060005b83518110156106cb5781818151811061067257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600086848151811061069e57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000208190555080806106c3906122e2565b915050610649565b506000546040517f9b606ed900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b606ed99061072290869060040161207f565b60006040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107769190810190611f1a565b9392505050565b600061078882610e5a565b92915050565b6107978161132f565b60009182526001602052604090912055565b600073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff831614156107e557506000919050565b7370997970c51812dc3a010c7d01b50e0d17dc79c873ffffffffffffffffffffffffffffffffffffffff8316141561081f57506001919050565b733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff8316141561085957506002919050565b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff8316141561089357506003919050565b7315d34aaf54267db7d7c367839aaf71a00a2c6a6573ffffffffffffffffffffffffffffffffffffffff831614156108cd57506004919050565b739965507d1a55bcc2695c58ba16fb37d819b0a4dc73ffffffffffffffffffffffffffffffffffffffff8316141561090757506005919050565b73976ea74026e726554db657fa54763abd0c3a0aa973ffffffffffffffffffffffffffffffffffffffff8316141561094157506006919050565b7314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff8316141561097b57506007919050565b7323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f73ffffffffffffffffffffffffffffffffffffffff831614156109b557506008919050565b73a0ee7a142d267c1f36714e4a8f75612f20a7972073ffffffffffffffffffffffffffffffffffffffff831614156109ef57506009919050565b73bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff83161415610a295750600a919050565b7371be63f3384f5fb98995898a86b02fb2426c578873ffffffffffffffffffffffffffffffffffffffff83161415610a635750600b919050565b73fabb0ac9d68b0b445fb7357272ff202c5651694a73ffffffffffffffffffffffffffffffffffffffff83161415610a9d5750600c919050565b731cbd3b2770909d4e10f157cabc84c7264073c9ec73ffffffffffffffffffffffffffffffffffffffff83161415610ad75750600d919050565b73df3e18d64bc6a983f673ab319ccae4f1a57c709773ffffffffffffffffffffffffffffffffffffffff83161415610b115750600e919050565b73cd3b766ccdd6ae721141f452c550ca635964ce7173ffffffffffffffffffffffffffffffffffffffff83161415610b4b5750600f919050565b732546bcd3c84621e976d8185a91a922ae77ecec3073ffffffffffffffffffffffffffffffffffffffff83161415610b8557506010919050565b73bda5747bfd65f08deb54cb465eb87d40e51b197e73ffffffffffffffffffffffffffffffffffffffff83161415610bbf57506011919050565b73dd2fd4581271e230360230f9337d5c0430bf44c073ffffffffffffffffffffffffffffffffffffffff83161415610bf957506012919050565b738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff83161415610c3357506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b6000610c8d8261132f565b600083815260016020526040808220929092555490517ff5bcb8d60000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d69060240160206040518083038186803b158015610d0757600080fd5b505afa158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190611fb9565b604080518082019091526060815260006020820152610d5d8261132f565b60008381526001602052604080822092909255805491517ff5bcb8d600000000000000000000000000000000000000000000000000000000815260048101859052909173ffffffffffffffffffffffffffffffffffffffff169063f5bcb8d69060240160206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611fb9565b6040805160808101825260069181019182527f73616d706c650000000000000000000000000000000000000000000000000000606082015290815260208101919091529392505050565b600061078882610f53565b60606000825167ffffffffffffffff811115610e9157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610eba578160200160208202803683370190505b50905060005b8351811015610f415760016000858381518110610eed57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002054828281518110610f2457634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610f39816122e2565b915050610ec0565b5092915050565b6000610788826113bb565b6000738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff83161415610fd1576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610c79565b610788826107a9565b6000610fe582611324565b905060005b825181101561106c5781818151811061101357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600085848151811061103f57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508080611064906122e2565b915050610fea565b505050565b6060600061107e83611324565b905060005b8351811015611105578181815181106110ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151600160008684815181106110d857634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000208190555080806110fd906122e2565b915050611083565b50600080546040517f9b606ed900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b606ed99061115d90879060040161207f565b60006040518083038186803b15801561117557600080fd5b505afa158015611189573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b19190810190611f1a565b90506000845167ffffffffffffffff8111156111dd57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561122357816020015b6040805180820190915260608152600060208201528152602001906001900390816111fb5790505b50905060005b855181101561062e5760405180604001604052806040518060400160405280600681526020017f73616d706c650000000000000000000000000000000000000000000000000000815250815260200184838151811061129857634e487b7160e01b600052603260045260246000fd5b60200260200101518152508282815181106112c357634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806112d9906122e2565b915050611229565b6501812f2590c0811015611321576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6060610788826113c6565b60408051600180825281830190925260009182919060208083019080368337019050509050828160008151811061137657634e487b7160e01b600052603260045260246000fd5b60200260200101818152505061138b81611324565b6000815181106113ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151915050919050565b6000610788826115c5565b60606000825167ffffffffffffffff8111156113f257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561141b578160200160208202803683370190505b5090506000835167ffffffffffffffff81111561144857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611471578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561149e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156114d157816020015b60608152602001906001900390816114bc5790505b50905060005b855181101561153f5760408051600a80825261016082019092529060208201610140803683370190505082828151811061152157634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080611537906122e2565b9150506114d7565b50600061154a6116c9565b90506000611557826117d9565b61ffff169050611568600283612262565b60405190925060005b828110156115ae5760006115888a8989898961182c565b90506115948186612262565b9450826040525080806115a6906122e2565b915050611571565b506115b98487611b3d565b98975050505050505050565b6000815160001415611603576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61160c82611cb5565b60006002835161161c919061227a565b90506002835161162c919061231b565b6116a9576000611694846116416001856122cb565b8151811061165f57634e487b7160e01b600052603260045260246000fd5b602002602001015185848151811061168757634e487b7160e01b600052603260045260246000fd5b6020026020010151611d03565b90506116a160028261227a565b949350505050565b8281815181106113ab57634e487b7160e01b600052603260045260246000fd5b60006602ed57011e0000601f1936013581161480611713576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115611750576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009611789600362ffffff8516612262565b6117939190612262565b9050366117a1600283612262565b1115610776576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806117e7602084612262565b905036811115611823576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b60008060008061183b85611d0f565b909250905060008080606081600d61185e611857602089612262565b8990611d5f565b6118689190612262565b9050600061188161187a60688d612262565b3690611d6b565b9050600061189e8361189460418f612262565b61187a9190612262565b90506118aa83826118bd565b93508260208501209450813596506118e1565b60408051838152602081850181019092526000910183838237601f19019392505050565b6118f28765ffffffffffff166112e1565b6119068561190160418f612262565b611d77565b95506119118661077d565b60ff1699505050505050505060008060005b84811015611b0a57611936888583611def565b909350915060005b8c51811015611af7578c818151811061196757634e487b7160e01b600052603260045260246000fd5b6020026020010151841415611ae55760008b828151811061199857634e487b7160e01b600052603260045260246000fd5b602002602001015190506119b181896001901b16151590565b1580156119e85750600a60ff168d83815181106119de57634e487b7160e01b600052603260045260246000fd5b6020026020010151105b15611adf578c8281518110611a0d57634e487b7160e01b600052603260045260246000fd5b602002602001018051809190611a22906122e2565b81525050838b8381518110611a4757634e487b7160e01b600052603260045260246000fd5b602002602001015160018f8581518110611a7157634e487b7160e01b600052603260045260246000fd5b6020026020010151611a8391906122cb565b81518110611aa157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001881b81178c8381518110611ad257634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b50611af7565b80611aef816122e2565b91505061193e565b5080611b02816122e2565b915050611923565b50505081602082611b1b9190612262565b611b25919061228e565b611b3090604e612262565b9998505050505050505050565b60606000835167ffffffffffffffff811115611b6957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611b92578160200160208202803683370190505b509050600a60005b8551811015611cab5781858281518110611bc457634e487b7160e01b600052603260045260246000fd5b60200260200101511015611c3857848181518110611bf257634e487b7160e01b600052603260045260246000fd5b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610c79929190918252602082015260400190565b6000611c6a878381518110611c5d57634e487b7160e01b600052603260045260246000fd5b6020026020010151610f48565b905080848381518110611c8d57634e487b7160e01b600052603260045260246000fd5b60209081029190910101525080611ca3816122e2565b915050611b9a565b5090949350505050565b8051602082016020820281019150805b82811015611cfd57815b81811015611cf4578151815180821015611cea578084528183525b5050602001611ccf565b50602001611cc5565b50505050565b60006107768284612262565b600080808080611d20604187612262565b90506000611d3261187a602084612262565b803594509050611d43816003611d6b565b62ffffff9490941697933563ffffffff16965092945050505050565b6000610776828461228e565b600061077682846122cb565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa158015611dda573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008080611dfe604e87612262565b90506000611e2b611e24611e13602089612262565b611e1e886001612262565b90611d5f565b8390611d03565b90506000611e393683611d6b565b80359960209091013598509650505050505050565b600060208284031215611e5f578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610776578182fd5b60006020808385031215611e94578182fd5b823567ffffffffffffffff811115611eaa578283fd5b8301601f81018513611eba578283fd5b8035611ecd611ec88261223e565b61220d565b80828252848201915084840188868560051b8701011115611eec578687fd5b8694505b83851015611f0e578035835260019490940193918501918501611ef0565b50979650505050505050565b60006020808385031215611f2c578182fd5b825167ffffffffffffffff811115611f42578283fd5b8301601f81018513611f52578283fd5b8051611f60611ec88261223e565b80828252848201915084840188868560051b8701011115611f7f578687fd5b8694505b83851015611f0e578051835260019490940193918501918501611f83565b600060208284031215611fb2578081fd5b5035919050565b600060208284031215611fca578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561200057815187529582019590820190600101611fe4565b509495945050505050565b60008151808452815b8181101561203057602081850181015186830182015201612014565b818111156120415782602083870101525b50601f01601f19169290920160200192915050565b600081516040845261206b604085018261200b565b602093840151949093019390935250919050565b6020808252825182820181905260009190848201906040850190845b818110156120b75783518352928401929184019160010161209b565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015612135577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612123858351612056565b945092850192908501906001016120e9565b5092979650505050505050565b6020815260006107766020830184611fd1565b6020815260006107766020830184612056565b6000602080835260608301845160408386015281815180845260808701915060808160051b88010193508483019250855b818110156121e5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808886030183526121d385855161200b565b94509285019291850191600101612199565b5050505090840151838203601f19016040850152906122048183611fd1565b95945050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156122365761223661235b565b604052919050565b600067ffffffffffffffff8211156122585761225861235b565b5060051b60200190565b600082198211156122755761227561232f565b500190565b60008261228957612289612345565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122c6576122c661232f565b500290565b6000828210156122dd576122dd61232f565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123145761231461232f565b5060010190565b60008261232a5761232a612345565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ab62b1fc64f5249181dc8d354631c3a50e92bafee421baa941ead63930b942b064736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleStorageProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleStorageProxy__factory = SampleStorageProxy__factory;
SampleStorageProxy__factory.bytecode = _bytecode;
SampleStorageProxy__factory.abi = _abi;
//# sourceMappingURL=SampleStorageProxy__factory.js.map