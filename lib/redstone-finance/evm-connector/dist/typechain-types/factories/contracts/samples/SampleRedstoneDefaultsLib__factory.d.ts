import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SampleRedstoneDefaultsLib, SampleRedstoneDefaultsLibInterface } from "../../../contracts/samples/SampleRedstoneDefaultsLib";
declare type SampleRedstoneDefaultsLibConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SampleRedstoneDefaultsLib__factory extends ContractFactory {
    constructor(...args: SampleRedstoneDefaultsLibConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SampleRedstoneDefaultsLib>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SampleRedstoneDefaultsLib;
    connect(signer: Signer): SampleRedstoneDefaultsLib__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610528806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b24ebfcc1461003b578063f50b2efe14610060575b600080fd5b61004e610049366004610318565b610075565b60405190815260200160405180910390f35b61007361006e3660046103f6565b610086565b005b600061008082610092565b92915050565b61008f8161009d565b50565b600061008082610158565b60006100ab6103e883610426565b90508042101561010b57603c6100c1428361043a565b1115610107576040517fb6b0916d000000000000000000000000000000000000000000000000000000008152600481018290524260248201526044015b60405180910390fd5b5050565b60b4610117824261043a565b1115610107576040517f0321d0b5000000000000000000000000000000000000000000000000000000008152600481018290524260248201526044016100fe565b6000815160001415610196576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61019f826102b7565b6000600283516101af9190610426565b9050600283516101bf9190610451565b61026e576000610259846101d460018561043a565b8151811061020b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015185848151811061024c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610305565b9050610266600282610426565b949350505050565b8281815181106102a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915050919050565b8051602082016020820281019150805b828110156102ff57815b818110156102f65781518151808210156102ec578084528183525b50506020016102d1565b506020016102c7565b50505050565b6000610311828461040e565b9392505050565b6000602080838503121561032a578182fd5b823567ffffffffffffffff80821115610341578384fd5b818501915085601f830112610354578384fd5b813581811115610366576103666104c3565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156103a9576103a96104c3565b604052828152858101935084860182860187018a10156103c7578788fd5b8795505b838610156103e95780358552600195909501949386019386016103cb565b5098975050505050505050565b600060208284031215610407578081fd5b5035919050565b6000821982111561042157610421610465565b500190565b60008261043557610435610494565b500490565b60008282101561044c5761044c610465565b500390565b60008261046057610460610494565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122027c3c1a8034253bd9f5357069ead8bedef74cba70797748f85b1ab1fdd7ead7564736f6c63430008040033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): SampleRedstoneDefaultsLibInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SampleRedstoneDefaultsLib;
}
export {};
//# sourceMappingURL=SampleRedstoneDefaultsLib__factory.d.ts.map